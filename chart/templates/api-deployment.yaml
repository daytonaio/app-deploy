apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "codelofts.api.fullname" . }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: {{ template "codelofts.api.fullname" . }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.components.api.autoscaling.enabled }}
  replicas: {{ .Values.components.api.replicaCount }}
  {{- end }}
  selector:
    matchLabels: {{ include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: {{ template "codelofts.api.fullname" . }}
  template:
    metadata:
      annotations:
        {{- if .Values.components.api.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: {{ template "codelofts.api.fullname" . }}
        {{- if .Values.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: db-migration
          image: "{{ .Values.image.repository }}/{{ .Values.components.migration.name }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            requests:
              memory: "128Mi"
              cpu: "30m"
          env:
            - name: "MIKRO_ORM_MIGRATIONS_DISABLE_FOREIGN_KEYS"
              value: "false"
            {{- if .Values.postgresql.enabled }}
            - name: "DB_HOST"
              value: {{ template "codeanywhere.postgres.name" . }}
            - name: "DB_PORT"
              value: "5432"
            - name: "DB_USER"
              value: {{ .Values.postgresql.auth.username | quote }}
            - name: "DB_PASS"
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ .Release.Name }}-postgresql
            - name: "DB_NAME"
              value: {{ .Values.postgresql.auth.database | quote }}
            {{- else }}
            - name: "DB_HOST"
              value: {{ .Values.externalDatabase.host | quote }}
            - name: "DB_PORT"
              value: {{ .Values.externalDatabase.port | quote }}
            - name: "DB_USER"
              value: {{ .Values.externalDatabase.username | quote }}
            - name: "DB_PASS"
            {{- if .Values.externalDatabase.existingSecret }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.externalDatabase.existingSecret }}
                  key:  {{ .Values.externalDatabase.existingSecretPasswordKey }}
            {{- else }}
              value: {{ .Values.externalDatabase.password | quote }}
            {{- end }}
            - name: "DB_NAME"
              value: {{ .Values.externalDatabase.database| quote }}
            {{- end }}
      containers:
        - name: api
          image: "{{ .Values.image.repository }}/api:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.components.api.resources | nindent 12 }}
          {{- end }}
          env:
            - name: "PORT"
              value: {{ .Values.components.api.containerPorts.api | quote }}
            - name: "BASE_DOMAIN"
              value: "{{ .Values.common.domain }}"
            - name: "API_BASE_URL"
              value: "https://api.{{ .Values.common.domain }}/"
            {{- if .Values.postgresql.enabled }}
            - name: "DB_HOST"
              value: {{ template "codeanywhere.postgres.name" . }}
            - name: "DB_PORT"
              value: "5432"
            - name: "DB_USER"
              value: {{ .Values.postgresql.auth.username | quote }}
            - name: "DB_PASS"
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ .Release.Name }}-postgresql
            - name: "DB_NAME"
              value: {{ .Values.postgresql.auth.database | quote }}
            {{- else }}
            - name: "DB_HOST"
              value: {{ .Values.externalDatabase.host | quote }}
            - name: "DB_PORT"
              value: {{ .Values.externalDatabase.port | quote }}
            - name: "DB_USER"
              value: {{ .Values.externalDatabase.username | quote }}
            - name: "DB_PASS"
            {{- if .Values.externalDatabase.existingSecret }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.externalDatabase.existingSecret }}
                  key:  {{ .Values.externalDatabase.existingSecretPasswordKey }}
            {{- else }}
              value: {{ .Values.externalDatabase.password | quote }}
            {{- end }}
            - name: "DB_NAME"
              value: {{ .Values.externalDatabase.database| quote }}
            {{- end }}
            {{- if .Values.rabbitmq.enabled }}
            - name: "AMQP_HOST"
              value: {{ template "codeanywhere.rabbitmq.name" . }}
            - name: "AMQP_PORT"
              value: "5672"
            - name: "AMQP_USER"
              value: "user"
            - name: "AMQP_PASS"
              value: "pass"
            {{- else }}
            - name: "AMQP_HOST"
              value: {{ .Values.externalAmqp.host | quote }}
            - name: "AMQP_PORT"
              value: {{ .Values.externalAmqp.port | quote }}
            - name: "AMQP_USER"
              value: {{ .Values.externalAmqp.username | quote }}
            - name: "AMQP_PASS"
            {{- if .Values.externalAmqp.existingSecret }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.externalAmqp.existingSecret }}
                  key:  {{ .Values.externalAmqp.existingSecretPasswordKey }}
            {{- else }}
              value: {{ .Values.externalAmqp.password | quote }}
            {{- end }}
            {{- end }}
            {{- if .Values.redis.enabled }}
            - name: "REDIS_HOST"
              value: {{ template "codeanywhere.redis.name" . }}
            - name: "REDIS_PORT"
              value: "6379"
            {{- else }}
            - name: "REDIS_HOST"
              value: {{ .Values.externalRedis.host | quote }}
            - name: "REDIS_PORT"
              value: {{ .Values.externalRedis.port | quote }}
            {{- end }}
            - name: "REDIS_KEYPREFIX"
              value: "ca"
            - name: "NOTIFICATION_BUS_CONSUMERS"
              value: {{ .Values.notificationBus.maxConcurrentConsumers | quote }}
            - name: "DEFAULT_PLAN_PARALLEL_WORKSPACES"
              value: {{ .Values.configuration.defaultPlanParallelWorkspaces | quote }}
            - name: "DEFAULT_PLAN_CREDITS"
              value: {{ .Values.configuration.defaultPlanCredits | quote }}
            - name: "DEFAULT_PLAN_NAME"
              value: {{ .Values.configuration.defaultPlanName | quote }}
            - name: "DEFAULT_PLAN_INACTIVITY_TIMEOUT_IN_MINUTES"
              value: {{ .Values.configuration.defaultPlanInactivityTimeoutInMinutes | quote }}
            - name: "DEFAULT_PLAN_BUILD_CREDITS"
              value: {{ .Values.configuration.defaultPlanBuildCredits | quote }}
            - name: "DEFAULT_PLAN_PARALLEL_BUILDS"
              value: {{ .Values.configuration.defaultPlanParallelBuilds | quote }}
            - name: "DEFAULT_PLAN_PINNED_WORKSPACES"
              value: {{ .Values.configuration.defaultPlanPinnedWorkspaces | quote }}
            {{- if .Values.configuration.defaultSubscriptionExpiryInDays }}
              - name: "DEFAULT_SUBSCRIPTION_EXPIRY_IN_DAYS"
              value: {{ .Values.configuration.defaultSubscriptionExpiryInDays | quote }}
            {{- end }}
            - name: "OIDC_ISSUER"
              value: {{ printf "%s/realms/%s" .Values.common.keycloak.url .Values.common.keycloak.realm | quote }}
            - name: "OIDC_AUDIENCE"
              value: {{ .Values.common.keycloak.api.audience | quote }}
            - name: "OIDC_CLIENT_ID"
              value: {{ .Values.common.keycloak.api.clientId | quote }}
            - name: "OIDC_CLIENT_SECRET"
              value: {{ .Values.common.keycloak.api.clientSecret | quote }}
            - name: "METRICS_ENABLED"
              value: {{ .Values.components.api.metrics.enabled | quote }}
            - name: "METRICS_PORT"
              value: {{ .Values.components.api.containerPorts.metrics | quote }}
            - name: "METRICS_PATH"
              value: {{ .Values.components.api.metrics.path | quote }}
            - name: "ENCRYPTION_SECRET"
              value: {{ .Values.configuration.encryptionSecret | quote }}
            - name: "SINGLE_CLUSTER_DEPLOYMENT"
              value: {{ .Values.configuration.singleClusterDeployment | quote }}
            - name: "DEFAULT_WORKSPACE_CLASS_NAME"
              value: {{ .Values.configuration.defaultWorkspaceClassName | quote }}
          livenessProbe:
            httpGet:
              path: /heartbeat
              port: {{ .Values.components.api.containerPorts.api }}
          readinessProbe:
            httpGet:
              path: /heartbeat
              port: {{ .Values.components.api.containerPorts.api }}
          resources:
            {{- toYaml .Values.components.api.resources | nindent 12 }}

